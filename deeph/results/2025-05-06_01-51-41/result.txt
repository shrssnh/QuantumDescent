====== CONFIG ======
[basic]
graph_dir=training/
save_dir=results/2025-05-06_01-51-41
raw_dir=../../graphene_dataset/processed/
dataset_name=graphene_agniful
only_get_graph=False
interface=npz
target=hamiltonian
disable_cuda=False
device=cuda:0
num_threads=-1
save_to_time_folder=True
save_csv=False
tb_writer=True
seed=42
multiprocessing=0
orbital=[{"6 6": [0, 0]}, {"6 6": [0, 1]}, {"6 6": [0, 2]}, {"6 6": [0, 3]}, {"6 6": [0, 4]}, {"6 6": [0, 5]}, {"6 6": [0, 6]}, {"6 6": [0, 7]}, {"6 6": [0, 8]}, {"6 6": [0, 9]}, {"6 6": [0, 10]}, {"6 6": [0, 11]}, {"6 6": [0, 12]}, {"6 6": [1, 0]}, {"6 6": [1, 1]}, {"6 6": [1, 2]}, {"6 6": [1, 3]}, {"6 6": [1, 4]}, {"6 6": [1, 5]}, {"6 6": [1, 6]}, {"6 6": [1, 7]}, {"6 6": [1, 8]}, {"6 6": [1, 9]}, {"6 6": [1, 10]}, {"6 6": [1, 11]}, {"6 6": [1, 12]}, {"6 6": [2, 0]}, {"6 6": [2, 1]}, {"6 6": [2, 2]}, {"6 6": [2, 3]}, {"6 6": [2, 4]}, {"6 6": [2, 5]}, {"6 6": [2, 6]}, {"6 6": [2, 7]}, {"6 6": [2, 8]}, {"6 6": [2, 9]}, {"6 6": [2, 10]}, {"6 6": [2, 11]}, {"6 6": [2, 12]}, {"6 6": [3, 0]}, {"6 6": [3, 1]}, {"6 6": [3, 2]}, {"6 6": [3, 3]}, {"6 6": [3, 4]}, {"6 6": [3, 5]}, {"6 6": [3, 6]}, {"6 6": [3, 7]}, {"6 6": [3, 8]}, {"6 6": [3, 9]}, {"6 6": [3, 10]}, {"6 6": [3, 11]}, {"6 6": [3, 12]}, {"6 6": [4, 0]}, {"6 6": [4, 1]}, {"6 6": [4, 2]}, {"6 6": [4, 3]}, {"6 6": [4, 4]}, {"6 6": [4, 5]}, {"6 6": [4, 6]}, {"6 6": [4, 7]}, {"6 6": [4, 8]}, {"6 6": [4, 9]}, {"6 6": [4, 10]}, {"6 6": [4, 11]}, {"6 6": [4, 12]}, {"6 6": [5, 0]}, {"6 6": [5, 1]}, {"6 6": [5, 2]}, {"6 6": [5, 3]}, {"6 6": [5, 4]}, {"6 6": [5, 5]}, {"6 6": [5, 6]}, {"6 6": [5, 7]}, {"6 6": [5, 8]}, {"6 6": [5, 9]}, {"6 6": [5, 10]}, {"6 6": [5, 11]}, {"6 6": [5, 12]}, {"6 6": [6, 0]}, {"6 6": [6, 1]}, {"6 6": [6, 2]}, {"6 6": [6, 3]}, {"6 6": [6, 4]}, {"6 6": [6, 5]}, {"6 6": [6, 6]}, {"6 6": [6, 7]}, {"6 6": [6, 8]}, {"6 6": [6, 9]}, {"6 6": [6, 10]}, {"6 6": [6, 11]}, {"6 6": [6, 12]}, {"6 6": [7, 0]}, {"6 6": [7, 1]}, {"6 6": [7, 2]}, {"6 6": [7, 3]}, {"6 6": [7, 4]}, {"6 6": [7, 5]}, {"6 6": [7, 6]}, {"6 6": [7, 7]}, {"6 6": [7, 8]}, {"6 6": [7, 9]}, {"6 6": [7, 10]}, {"6 6": [7, 11]}, {"6 6": [7, 12]}, {"6 6": [8, 0]}, {"6 6": [8, 1]}, {"6 6": [8, 2]}, {"6 6": [8, 3]}, {"6 6": [8, 4]}, {"6 6": [8, 5]}, {"6 6": [8, 6]}, {"6 6": [8, 7]}, {"6 6": [8, 8]}, {"6 6": [8, 9]}, {"6 6": [8, 10]}, {"6 6": [8, 11]}, {"6 6": [8, 12]}, {"6 6": [9, 0]}, {"6 6": [9, 1]}, {"6 6": [9, 2]}, {"6 6": [9, 3]}, {"6 6": [9, 4]}, {"6 6": [9, 5]}, {"6 6": [9, 6]}, {"6 6": [9, 7]}, {"6 6": [9, 8]}, {"6 6": [9, 9]}, {"6 6": [9, 10]}, {"6 6": [9, 11]}, {"6 6": [9, 12]}, {"6 6": [10, 0]}, {"6 6": [10, 1]}, {"6 6": [10, 2]}, {"6 6": [10, 3]}, {"6 6": [10, 4]}, {"6 6": [10, 5]}, {"6 6": [10, 6]}, {"6 6": [10, 7]}, {"6 6": [10, 8]}, {"6 6": [10, 9]}, {"6 6": [10, 10]}, {"6 6": [10, 11]}, {"6 6": [10, 12]}, {"6 6": [11, 0]}, {"6 6": [11, 1]}, {"6 6": [11, 2]}, {"6 6": [11, 3]}, {"6 6": [11, 4]}, {"6 6": [11, 5]}, {"6 6": [11, 6]}, {"6 6": [11, 7]}, {"6 6": [11, 8]}, {"6 6": [11, 9]}, {"6 6": [11, 10]}, {"6 6": [11, 11]}, {"6 6": [11, 12]}, {"6 6": [12, 0]}, {"6 6": [12, 1]}, {"6 6": [12, 2]}, {"6 6": [12, 3]}, {"6 6": [12, 4]}, {"6 6": [12, 5]}, {"6 6": [12, 6]}, {"6 6": [12, 7]}, {"6 6": [12, 8]}, {"6 6": [12, 9]}, {"6 6": [12, 10]}, {"6 6": [12, 11]}, {"6 6": [12, 12]}]
o_component=H
energy_component=summation
max_element=-1
statistics=False
normalizer=False
boxcox=False

[graph]
radius=6.0
max_num_nbr=0
create_from_dft=False
if_lcmp_graph=True
separate_onsite=False
new_sp=False

[train]
epochs=5000
pretrained=
resume=
train_ratio=0.6
val_ratio=0.2
test_ratio=0.2
early_stopping_loss=0.0
early_stopping_loss_epoch=[0.000000, 500]
revert_then_decay=True
revert_threshold=30
revert_decay_epoch=[800, 2000, 3000, 4000]
revert_decay_gamma=[0.4, 0.5, 0.5, 0.4]
clip_grad=True
clip_grad_value=4.2
switch_sgd=False
switch_sgd_lr=1e-4
switch_sgd_epoch=-1

[hyperparameter]
batch_size=4
dtype=float32
optimizer=adam
learning_rate=0.001
lr_scheduler=ReduceLROnPlateau
lr_milestones=[]
momentum=0.9
weight_decay=0
criterion=MaskMSELoss
retain_edge_fea=True
lambda_eij=0.0
lambda_ei=0.1
lambda_etot=0.0

[network]
atom_fea_len=64
edge_fea_len=128
gauss_stop=6.0
num_l=5
aggr=add
distance_expansion=GaussianBasis
if_exp=True
if_multiplelinear=True
if_edge_update=True
if_agni=True
if_lcmp=True
normalization=LayerNorm
atom_update_net=GAT
trainable_gaussians=False
type_affine=False

Graph data file: HGraph-npz-graphene_agniful-5l-6.0r0mn.pkl
Process new data file......
Found 450 structures, have cost 6 seconds
Use multiprocessing (nodes = num_processors x num_threads = 1 x 24)
  0%|          | 0/450 [00:00<?, ?it/s]  0%|          | 1/450 [00:02<17:11,  2.30s/it]  0%|          | 2/450 [00:04<17:16,  2.31s/it]  1%|          | 3/450 [00:07<17:36,  2.36s/it]  1%|          | 4/450 [00:09<17:31,  2.36s/it]  1%|1         | 5/450 [00:11<17:20,  2.34s/it]  1%|1         | 6/450 [00:14<17:28,  2.36s/it]  2%|1         | 7/450 [00:16<17:27,  2.37s/it]Traceback (most recent call last):
  File "/home2/yashas.b/miniconda3/envs/dft/bin/deeph-train", line 8, in <module>
    sys.exit(main())
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/scripts/train.py", line 15, in main
    train_loader, val_loader, test_loader, transform = kernel.get_dataset(only_get_graph)
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/kernel.py", line 289, in get_dataset
    dataset = HData(
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/data.py", line 102, in __init__
    self.process()
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/data.py", line 192, in process
    data_list = [self.process_worker(folder) for folder in tqdm.tqdm(folder_list)]
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/data.py", line 192, in <listcomp>
    data_list = [self.process_worker(folder) for folder in tqdm.tqdm(folder_list)]
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/data.py", line 151, in process_worker
    data = get_graph(cart_coords, frac_coords, numbers, stru_id, r=self.radius, max_num_nbr=self.max_num_nbr,
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/graph.py", line 837, in get_graph
    angular_expansion.append(sph_harm_func.get(l, r_vec_sp[:, 0], r_vec_sp[:, 1]))
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/from_se3_transformer/representations.py", line 202, in get
    results.append(self.get_element(l, m, theta, phi))
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/from_se3_transformer/representations.py", line 174, in get_element
    leg = self.lpmv(l, abs(m), torch.cos(theta))
KeyboardInterrupt
  2%|1         | 7/450 [00:18<19:01,  2.58s/it]
