====== CONFIG ======
[basic]
graph_dir=./training
save_dir=./results/2025-04-20_12-14-11
raw_dir=../../graphene_dataset/processed/
dataset_name=../../graphene_dataset
only_get_graph=False
interface=npz
target=hamiltonian
disable_cuda=False
device=cuda:0
num_threads=-1
save_to_time_folder=True
save_csv=False
tb_writer=True
seed=42
multiprocessing=0
orbital=[{"6 6": [0, 0]}, {"6 6": [0, 1]}, {"6 6": [0, 2]}, {"6 6": [0, 3]}, {"6 6": [0, 4]}, {"6 6": [0, 5]}, {"6 6": [0, 6]}, {"6 6": [0, 7]}, {"6 6": [0, 8]}, {"6 6": [0, 9]}, {"6 6": [0, 10]}, {"6 6": [0, 11]}, {"6 6": [0, 12]}, {"6 6": [1, 0]}, {"6 6": [1, 1]}, {"6 6": [1, 2]}, {"6 6": [1, 3]}, {"6 6": [1, 4]}, {"6 6": [1, 5]}, {"6 6": [1, 6]}, {"6 6": [1, 7]}, {"6 6": [1, 8]}, {"6 6": [1, 9]}, {"6 6": [1, 10]}, {"6 6": [1, 11]}, {"6 6": [1, 12]}, {"6 6": [2, 0]}, {"6 6": [2, 1]}, {"6 6": [2, 2]}, {"6 6": [2, 3]}, {"6 6": [2, 4]}, {"6 6": [2, 5]}, {"6 6": [2, 6]}, {"6 6": [2, 7]}, {"6 6": [2, 8]}, {"6 6": [2, 9]}, {"6 6": [2, 10]}, {"6 6": [2, 11]}, {"6 6": [2, 12]}, {"6 6": [3, 0]}, {"6 6": [3, 1]}, {"6 6": [3, 2]}, {"6 6": [3, 3]}, {"6 6": [3, 4]}, {"6 6": [3, 5]}, {"6 6": [3, 6]}, {"6 6": [3, 7]}, {"6 6": [3, 8]}, {"6 6": [3, 9]}, {"6 6": [3, 10]}, {"6 6": [3, 11]}, {"6 6": [3, 12]}, {"6 6": [4, 0]}, {"6 6": [4, 1]}, {"6 6": [4, 2]}, {"6 6": [4, 3]}, {"6 6": [4, 4]}, {"6 6": [4, 5]}, {"6 6": [4, 6]}, {"6 6": [4, 7]}, {"6 6": [4, 8]}, {"6 6": [4, 9]}, {"6 6": [4, 10]}, {"6 6": [4, 11]}, {"6 6": [4, 12]}, {"6 6": [5, 0]}, {"6 6": [5, 1]}, {"6 6": [5, 2]}, {"6 6": [5, 3]}, {"6 6": [5, 4]}, {"6 6": [5, 5]}, {"6 6": [5, 6]}, {"6 6": [5, 7]}, {"6 6": [5, 8]}, {"6 6": [5, 9]}, {"6 6": [5, 10]}, {"6 6": [5, 11]}, {"6 6": [5, 12]}, {"6 6": [6, 0]}, {"6 6": [6, 1]}, {"6 6": [6, 2]}, {"6 6": [6, 3]}, {"6 6": [6, 4]}, {"6 6": [6, 5]}, {"6 6": [6, 6]}, {"6 6": [6, 7]}, {"6 6": [6, 8]}, {"6 6": [6, 9]}, {"6 6": [6, 10]}, {"6 6": [6, 11]}, {"6 6": [6, 12]}, {"6 6": [7, 0]}, {"6 6": [7, 1]}, {"6 6": [7, 2]}, {"6 6": [7, 3]}, {"6 6": [7, 4]}, {"6 6": [7, 5]}, {"6 6": [7, 6]}, {"6 6": [7, 7]}, {"6 6": [7, 8]}, {"6 6": [7, 9]}, {"6 6": [7, 10]}, {"6 6": [7, 11]}, {"6 6": [7, 12]}, {"6 6": [8, 0]}, {"6 6": [8, 1]}, {"6 6": [8, 2]}, {"6 6": [8, 3]}, {"6 6": [8, 4]}, {"6 6": [8, 5]}, {"6 6": [8, 6]}, {"6 6": [8, 7]}, {"6 6": [8, 8]}, {"6 6": [8, 9]}, {"6 6": [8, 10]}, {"6 6": [8, 11]}, {"6 6": [8, 12]}, {"6 6": [9, 0]}, {"6 6": [9, 1]}, {"6 6": [9, 2]}, {"6 6": [9, 3]}, {"6 6": [9, 4]}, {"6 6": [9, 5]}, {"6 6": [9, 6]}, {"6 6": [9, 7]}, {"6 6": [9, 8]}, {"6 6": [9, 9]}, {"6 6": [9, 10]}, {"6 6": [9, 11]}, {"6 6": [9, 12]}, {"6 6": [10, 0]}, {"6 6": [10, 1]}, {"6 6": [10, 2]}, {"6 6": [10, 3]}, {"6 6": [10, 4]}, {"6 6": [10, 5]}, {"6 6": [10, 6]}, {"6 6": [10, 7]}, {"6 6": [10, 8]}, {"6 6": [10, 9]}, {"6 6": [10, 10]}, {"6 6": [10, 11]}, {"6 6": [10, 12]}, {"6 6": [11, 0]}, {"6 6": [11, 1]}, {"6 6": [11, 2]}, {"6 6": [11, 3]}, {"6 6": [11, 4]}, {"6 6": [11, 5]}, {"6 6": [11, 6]}, {"6 6": [11, 7]}, {"6 6": [11, 8]}, {"6 6": [11, 9]}, {"6 6": [11, 10]}, {"6 6": [11, 11]}, {"6 6": [11, 12]}, {"6 6": [12, 0]}, {"6 6": [12, 1]}, {"6 6": [12, 2]}, {"6 6": [12, 3]}, {"6 6": [12, 4]}, {"6 6": [12, 5]}, {"6 6": [12, 6]}, {"6 6": [12, 7]}, {"6 6": [12, 8]}, {"6 6": [12, 9]}, {"6 6": [12, 10]}, {"6 6": [12, 11]}, {"6 6": [12, 12]}]
o_component=H
energy_component=summation
max_element=-1
statistics=False
normalizer=False
boxcox=False

[graph]
radius=-1.0
max_num_nbr=0
create_from_dft=False
if_lcmp_graph=True
separate_onsite=False
new_sp=False

[train]
epochs=4000
pretrained=
resume=
train_ratio=0.6
val_ratio=0.2
test_ratio=0.2
early_stopping_loss=0.0
early_stopping_loss_epoch=[0.000000, 500]
revert_then_decay=True
revert_threshold=30
revert_decay_epoch=[500, 2000, 3000]
revert_decay_gamma=[0.4, 0.5, 0.5]
clip_grad=True
clip_grad_value=4.2
switch_sgd=False
switch_sgd_lr=1e-4
switch_sgd_epoch=-1

[hyperparameter]
batch_size=3
dtype=float32
optimizer=adam
learning_rate=0.001
lr_scheduler=
lr_milestones=[]
momentum=0.9
weight_decay=0
criterion=MaskMSELoss
retain_edge_fea=True
lambda_eij=0.0
lambda_ei=0.1
lambda_etot=0.0

[network]
atom_fea_len=64
edge_fea_len=128
gauss_stop=6
num_l=5
aggr=add
distance_expansion=GaussianBasis
if_exp=True
if_multiplelinear=True
if_edge_update=True
if_agni=True
if_lcmp=True
normalization=LayerNorm
atom_update_net=CGConv
trainable_gaussians=False
type_affine=False

Graph data file: HGraph-npz-../../graphene_dataset-5l--1.0r0mn.pkl
Process new data file......
Found 450 structures, have cost 0 seconds
Use multiprocessing (nodes = num_processors x num_threads = 1 x 12)
  0%|          | 0/450 [00:00<?, ?it/s]Cube to coords index:  defaultdict(<class 'list'>, {np.int64(-209): [0], np.int64(-207): [1], np.int64(-167): [2], np.int64(-165): [3], np.int64(-144): [4], np.int64(-143): [5], np.int64(-122): [6], np.int64(-121): [7], np.int64(-100): [8], np.int64(-213): [9], np.int64(-212): [10], np.int64(-171): [11], np.int64(-169): [12], np.int64(-149): [13], np.int64(-147): [14], np.int64(-127): [15], np.int64(-125): [16], np.int64(-104): [17], np.int64(-103): [18], np.int64(-62): [19], np.int64(-61): [20], np.int64(-175): [21], np.int64(-174): [22], np.int64(-153): [23], np.int64(-152): [24], np.int64(-131): [25], np.int64(-129): [26], np.int64(-109): [27], np.int64(-107): [28], np.int64(-67): [29], np.int64(-65): [30], np.int64(-44): [31], np.int64(-43): [32], np.int64(-157): [33], np.int64(-156): [34], np.int64(-135): [35], np.int64(-134): [36], np.int64(-113): [37], np.int64(-112): [38], np.int64(-71): [39], np.int64(-69): [40], np.int64(-49): [41], np.int64(-47): [42], np.int64(-27): [43], np.int64(-25): [44], np.int64(-139): [45], np.int64(-138): [46], np.int64(-117): [47], np.int64(-116): [48], np.int64(-75): [49], np.int64(-74): [50], np.int64(-53): [51], np.int64(-52): [52], np.int64(-31): [53], np.int64(-29): [54], np.int64(-9): [55], np.int64(-7): [56], np.int64(-120): [57], np.int64(-79): [58], np.int64(-78): [59], np.int64(-57): [60], np.int64(-56): [61], np.int64(-35): [62], np.int64(-34): [63], np.int64(-13): [64], np.int64(-12): [65]})
[]
KS:  []
Traceback (most recent call last):
  File "/home2/yashas.b/miniconda3/envs/dft/bin/deeph-train", line 8, in <module>
    sys.exit(main())
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/scripts/train.py", line 15, in main
    train_loader, val_loader, test_loader, transform = kernel.get_dataset(only_get_graph)
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/kernel.py", line 289, in get_dataset
    dataset = HData(
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/data.py", line 102, in __init__
    self.process()
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/data.py", line 192, in process
    data_list = [self.process_worker(folder) for folder in tqdm.tqdm(folder_list)]
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/data.py", line 192, in <listcomp>
    data_list = [self.process_worker(folder) for folder in tqdm.tqdm(folder_list)]
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/data.py", line 151, in process_worker
    data = get_graph(cart_coords, frac_coords, numbers, stru_id, r=self.radius, max_num_nbr=self.max_num_nbr,
  File "/home2/yashas.b/miniconda3/envs/dft/lib/python3.9/site-packages/deeph/graph.py", line 546, in get_graph
    nn_coords_index = np.concatenate([cube_to_coords_index[k] for k in ks], axis=0)
ValueError: need at least one array to concatenate
  0%|          | 0/450 [00:00<?, ?it/s]
